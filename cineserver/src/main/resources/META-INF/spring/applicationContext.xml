<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans                     
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/jee
						http://www.springframework.org/schema/jee/spring-jee.xsd">
	
	<!-- Rest e JSON CONFIG -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- Usar o HibernateAware mapper ao inves do default -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="br.com.codifico.util.registros.HibernateAwareObjectMapper" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Configure transaction manager for JPA -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	

	<!-- Lookup a JNDI datasource -->
	<jee:jndi-lookup id="dataSource" jndi-name="java:/CineDS" />

	<!-- Configure the EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${jdbc.dialect}" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hbm2ddl}</prop>
				<!-- prop key="hibernate.show_sql">${jdbc.showsql}</prop -->
				<!-- prop key="hibernate.cache.use_second_level_cache">true</prop -->
				<!-- prop key="hibernate.cache.use_query_cache">true</prop -->
				<!-- prop key="hibernate.cache.region.factory_class" -->
				<!-- org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory -->
				<!-- //usar o de cima net.sf.ehcache.hibernate.EhCacheRegionFactory -->
				<!-- /prop -->
			</props>
		</property>
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Arquivo de Resources -->
	<context:property-placeholder location="classpath*:META-INF/jdbc.properties" />
	
	<!-- Contexto das anotacoes -->
	<context:annotation-config />
	
	<!-- Pacote que contem os esteriotipos -->
	<context:component-scan base-package="br.com.codifico" />
	
	<!-- Transacao sera aceita na app inteira -->
	<tx:jta-transaction-manager />
	
	<!-- Create an annotation driven transaction support using AspectJ -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>